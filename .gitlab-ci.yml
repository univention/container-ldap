---

# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2023-2025 Univention GmbH <info@univention.de>

include:
  - project: "univention/dev/nubus-for-k8s/common-ci"
    ref: "v1.44.2"
    file:
      - "defaults/stages.yaml"
      - "defaults/nubus-workflow.yaml"
      - "jobs/lint-pre-commit.yaml"
      - "jobs/lint-commit-messages.yaml"
      - "jobs/semantic-release-env.yaml"
      - "jobs/container-build-external.yaml"
      - "jobs/package-and-publish-helm-charts-external.yaml"
      - "jobs/check-debian-updates.yaml"
      - "templates/sonarqube.yaml"
  - project: "univention/infrastructure/docker-services"
    ref: "master"
    file:
      - "dind.yml"

variables:
  # Used by pre-commit/gitlab-ci-linter
  GITLAB_PRIVATE_TOKEN: "${GITLAB_TOKEN}"
  GITLAB_PROJECT_ID: "${CI_PROJECT_ID}"
  GITLAB_SERVER: "https://git.knut.univention.de"

lint-pre-commit:
  before_script:
    - cp .env.ldap-server.example .env.ldap-server
    - helm repo add bitnami https://charts.bitnami.com/bitnami

.build-matrix: &build-matrix
  - IMAGE_NAME:
      - "ldap-server"
  - IMAGE_NAME: "ldap-notifier"
    DOCKERFILE_PATH: "./docker/ldap-notifier/Dockerfile"
    KANIKO_BUILD_CONTEXT: "$CI_PROJECT_DIR/docker/ldap-notifier"
    KANIKO_CACHE_ARGS: "--cache=false"
  - IMAGE_NAME: "ldif-producer"
    DOCKERFILE_PATH: "./docker/ldif-producer/Dockerfile"
    KANIKO_BUILD_CONTEXT: "$CI_PROJECT_DIR"
  - IMAGE_NAME: "ldap-server-elector"
    KANIKO_BUILD_CONTEXT: "$CI_PROJECT_DIR/docker/leader-elector"
  - IMAGE_NAME: "testrunner"
    DOCKERFILE_PATH: "./docker/testrunner/Dockerfile"
    KANIKO_BUILD_CONTEXT: "$CI_PROJECT_DIR"
    KANIKO_CACHE_ARGS: "--cache=false"
  - IMAGE_NAME: "database-initialized-testrunner"
    KANIKO_BUILD_CONTEXT: "$CI_PROJECT_DIR/docker/ldap-server"
    KANIKO_CACHE_ARGS: "--target=pytest"

.publish-matrix: &publish-matrix
  - IMAGE_NAME:
      - "ldap-server"
      - "ldap-notifier"
      - "ldif-producer"
      - "ldap-server-elector"

container-build:
  parallel:
    matrix: *build-matrix

container-malware-scan:
  parallel:
    matrix: *publish-matrix

container-sign-external:
  parallel:
    matrix: *publish-matrix

test-database-initialized-unit:
  stage: "test"
  image: "${CI_REGISTRY_IMAGE}/database-initialized-testrunner:${RELEASE_VERSION}"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: "never"
    - when: "on_success"
  script:
    - cd docker/ldap-server
    - pytest

test-ldap-smoke:
  stage: test
  extends: .dind
  image: "${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:24.0.7"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: "never"
    - when: "on_success"
  before_script:
    # Allow that the Docker API version is negotiated between client and server
    - unset DOCKER_API_VERSION
    - export IMAGE_TAG=${RELEASE_VERSION}
    - echo -e "\e[0Ksection_start:`date +%s`:docker_debug[collapsed=true]\r\e[0KDocker version details"
    - echo $IMAGE_TAG
    - docker version
    - echo -e "\e[0Ksection_end:`date +%s`:docker_debug\r\e[0K"
    - echo -e "\e[0Ksection_start:`date +%s`:docker_compose_config[collapsed=true]\r\e[0KDocker Compose configuration"
    - docker compose config test
    - echo -e "\e[0Ksection_end:`date +%s`:docker_compose_config\r\e[0K"
    - docker compose up --no-build --quiet-pull --wait --wait-timeout 60 nats ldap-server ldif-producer
  script:
    - docker compose run --quiet-pull --rm test .venv/bin/pytest -v tests/integration tests/unit
  after_script:
    - docker logs dev-local-ldap-server-1 >& ldap-server.log
    - docker logs dev-local-ldif-producer-1 >& ldif-producer.log
    - docker logs dev-local-nats-1 >& nats.log
    - docker compose down --volumes
  artifacts:
    paths:
      - ldap-server.log
      - ldif-producer.log
      - nats.log
    expire_in: "1 day"
    when: "always"
    expose_as: "docker compose server logs"

test-chart-ldap-server:
  stage: test
  needs: []
  image: "gitregistry.knut.univention.de/univention/dev/nubus-for-k8s/common-helm/testrunner:0.24.3@sha256:2597661437c31ded486c2583bec278feb02e91d12cbb09dbbc70b7749f4bafdf"
  script:
    - helm dep build helm/ldap-server
    - pytest tests/chart/ldap-server

test-chart-ldap-notifier:
  stage: test
  needs: []
  image: "gitregistry.knut.univention.de/univention/dev/nubus-for-k8s/common-helm/testrunner:0.24.3@sha256:2597661437c31ded486c2583bec278feb02e91d12cbb09dbbc70b7749f4bafdf"
  script:
    - helm dep build helm/ldap-notifier
    - pytest tests/chart/ldap-notifier

chart-tests:
  image: "gitregistry.knut.univention.de/univention/dev/nubus-for-k8s/common-helm/testrunner:0.28.0-pre-dpapoutsis-nubus-common-templated-keymapping"
  stage: "test"
  needs: []
  script:
    - "helm dep build helm/ldap-server"
    - "pytest -vv helm-unittests"

test-ldap-sync-indexes:
  stage: "test"
  image: "${CI_REGISTRY_IMAGE}/testrunner:latest"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: "never"
    - when: "on_success"
  before_script:
    - cat ldap-server.log
    - export LDAP_SERVER_LOG=ldap-server.log
  script:
    - /app/.venv/bin/pytest -v tests/integration/test_ldap_index_sync.py
  needs:
  - job: test-ldap-smoke
    artifacts: true
  dependencies:
    - test-ldap-smoke

push-image-external:
  parallel:
    matrix: *publish-matrix

check-debian-updates:
  parallel:
    matrix: *publish-matrix
  variables:
    TARGET_IMAGE: "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:latest"

sonarqube:
  extends: .sonarqube
  needs: []

...
