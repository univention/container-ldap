---

include:
  - project: "univention/customers/dataport/upx/common-ci"
    ref: "v0.5.4"
    file:
      # TODO: Sphinx docs inherits a stage definition from upstream,
      # has to be included before our default stages to avoid trouble.
      - "jobs/sphinx-docs.yaml"
      - "defaults/stages.yaml"
      - "defaults/souvap-workflow.yaml"
      - "templates/kaniko.yaml"
      - "templates/semantic-release-env.yaml"
      - "templates/souvap.yaml"
      - "jobs/lint-commit-messages.yaml"
      - "jobs/lint-pre-commit.yaml"
      - "jobs/package-and-publish-helm-charts.yaml"
  - project: "univention/dist/docker-services"
    ref: "master"
    file:
      - "dind.yml"

variables:
  SOUVAP_HELM_PROJECT_ID: 155
  SOUVAP_REGISTRY_PATH: souvap/tooling/images/univention


lint-pre-commit:
  before_script:
    - cp .env.ldap-server.example .env.ldap-server


pre-semantic-release:
  extends: ".pre-semantic-release"


deb-builder-image:
  stage: build
  extends: .kaniko
  needs: []
  variables:
    KANIKO_BUILD_CONTEXT: "docker/ldap"
    DOCKERFILE_PATH: "docker/ldap/Dockerfile_deb_builder"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/container-ldap-deb-builder"


build-ldap-image:
  stage: build
  extends: .kaniko
  needs:
    - job: "deb-builder-image"
      artifacts: true
    - job: "pre-semantic-release"
      artifacts: true
  variables:
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/ldap-server"
    KANIKO_BUILD_CONTEXT: "docker/ldap"
    KANIKO_ARGS: >-
      --build-arg DEB_BUILDER_TAG=$BUILD_VERSION
    VERSION: "${RELEASE_VERSION}"


build-notifier-image:
  stage: build
  extends: .kaniko
  needs:
    - job: "pre-semantic-release"
      artifacts: true
  variables:
    KANIKO_BUILD_CONTEXT: "docker/notifier"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/ldap-notifier"
    VERSION: "${RELEASE_VERSION}"


build-testrunner-image:
  stage: build
  extends: .kaniko
  needs:
    - job: "pre-semantic-release"
      artifacts: true
  variables:
    KANIKO_BUILD_CONTEXT: "docker/testrunner"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/testrunner"
    VERSION: "${RELEASE_VERSION}"


test-ldap-unit:
  stage: test
  needs:
    - job: build-ldap-image
      artifacts: true
    - job: build-testrunner-image
      artifacts: false
  extends: .dind
  before_script:
    # The setup below would be easier with Docker Compose,
    # except injecting the image tag into the Compose file
    # would be very ugly.
    - docker network create testnet
    - docker volume create ldap-shared-data
    - docker volume create ldap-shared-run
    - docker image pull "${BUILD_IMAGE_TAG}"
    - docker image pull "${CI_REGISTRY_IMAGE}/testrunner:${BUILD_VERSION}"
    - >-
      docker run
      --detach
      --name ldap-server
      --env LDAP_CN_ADMIN_PW=univention
      --network testnet
      --mount type=bind,source="${PWD}"/tests/base-defaults.conf,target=/etc/univention/base-defaults.conf,readonly
      --volume ldap-shared-data:/var/lib/univention-ldap/:rw
      --volume ldap-shared-run:/var/run/slapd/:rw
      ${BUILD_IMAGE_TAG}
    - echo "Checking container start-up logs ... "
    - sleep 10
    - docker logs ldap-server
    - echo "Waiting for slapd to come up ... "
    - >-
      docker run
      --rm
      --network testnet
      --volume "${PWD}":/app
      "${CI_REGISTRY_IMAGE}/testrunner:${BUILD_VERSION}"
      pytest -k test_connection --capture=no --ldap-server=ldap-server:389
    - echo "LDAP server logs:"
    - docker logs ldap-server
  script:
    - >-
      docker run
      --rm
      --network testnet
      --volume "${PWD}":/app
      "${CI_REGISTRY_IMAGE}/testrunner:${BUILD_VERSION}"
      pytest
      --ldap-server=ldap-server:389


push-image-souvap-ldap-server:
  needs:
    - job: build-ldap-image
  extends: .push-image-souvap
  variables:
    SOUVAP_IMAGE_NAME: "ldap-server"


push-image-souvap-ldap-notifier:
  needs:
    - job: build-notifier-image
  extends: .push-image-souvap
  variables:
    SOUVAP_IMAGE_NAME: "ldap-notifier"


package-helm-charts:
  needs:
    - job: "pre-semantic-release"
      artifacts: true


publish-helm-charts-souvap:
  extends: .publish-helm-charts-souvap

...
