---

include:
  - project: univention/customers/dataport/upx/common-ci
    file:
      # TODO: Sphinx docs inherits a stage definition from upstream,
      # has to be included before our default stages to avoid trouble.
      - jobs/sphinx-docs.yaml
      - defaults/stages.yaml
      - defaults/souvap-workflow.yaml
      - templates/kaniko.yaml
      - templates/souvap.yaml
      - jobs/lint-commit-messages.yaml
      - jobs/lint-pre-commit.yaml
      - jobs/package-and-publish-helm-charts.yaml

variables:
  SOUVAP_REGISTRY_PATH: souvap/tooling/images/univention-ldap
  SOUVAP_HELM_PROJECT_ID: "126"


lint-pre-commit:
  before_script:
    - cp .env.ldap-server.example .env.ldap-server


deb-builder-image:
  stage: build
  extends: .kaniko
  needs: []
  variables:
    KANIKO_BUILD_CONTEXT: "docker/ldap"
    DOCKERFILE_PATH: "docker/ldap/Dockerfile_deb_builder"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/container-ldap-deb-builder"


build-ldap-image:
  stage: build
  extends: .kaniko
  needs:
    - deb-builder-image
  variables:
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/ldap-server"
    KANIKO_BUILD_CONTEXT: "docker/ldap"
    KANIKO_ARGS: >-
      --build-arg DEB_BUILDER_TAG=$BUILD_VERSION


build-notifier-image:
  stage: build
  extends: .kaniko
  needs: []
  variables:
    KANIKO_BUILD_CONTEXT: "docker/notifier"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/ldap-notifier"


build-testrunner-image:
  stage: build
  extends: .kaniko
  needs: []
  variables:
    KANIKO_BUILD_CONTEXT: "docker/testrunner"
    CI_REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE/testrunner"


test-ldap-unit:
  stage: test
  needs:
    - job: build-testrunner-image
      artifacts: false
    - job: build-ldap-image
  image: "${CI_REGISTRY_IMAGE}/testrunner:${BUILD_VERSION}"
  services:
    - name: ${BUILD_IMAGE_TAG}
  variables:
    DOMAIN_NAME: univention-organization.intranet
    LDAP_BASE_DN: dc=univention-organization,dc=intranet
    LDAP_CN_ADMIN_PW: univention
    # CI_DEBUG_SERVICES: "true"
  before_script:
    # Working around setup issue with the Gitlab in knut
    - echo "Waiting for slapd to come up ... "
    - timeout 300 bash -c 'until printf "" 2>>/dev/null >>/dev/tcp/$0/$1; do sleep 1; done' localhost 389
  script:
    - pytest


push-image-souvap-ldap-server:
  needs:
    - job: build-ldap-image
  extends: .push-image-souvap
  variables:
    SOUVAP_IMAGE_NAME: "ldap-server"


push-image-souvap-ldap-notifier:
  needs:
    - job: build-notifier-image
  extends: .push-image-souvap
  variables:
    SOUVAP_IMAGE_NAME: "ldap-notifier"


publish-helm-charts-souvap:
  extends: .publish-helm-charts-souvap


# TODO: pending work below
# test-job:
#   stage: test-stage
#   tags:
#   - docker
#   image: ${UPX_IMAGE_REGISTRY}docker/compose:1.30-debian-buster-python-3.7.3
#   services:
#   - name: ${UNIV_DOCKERHUB_CACHE}library/docker:20.10.7-dind
#     alias: docker
#     command:
#     - --insecure-registry=artifacts.knut.univention.de
#     - --tls=false
#   script:
#   - cp .env.ldap-server.example .env.ldap-server
#   - docker-compose ${DOCKER_COMPOSE_PRODUCTION_FILES} pull
#   - docker-compose ${DOCKER_COMPOSE_PRODUCTION_FILES} up --detach --no-build
#   - cd integration-test
#   - docker-compose pull
#   - docker-compose up --no-build --exit-code-from test
#   - docker-compose rm
#   - ls -lah robot_results
#   - cd -
#   - docker-compose ${DOCKER_COMPOSE_PRODUCTION_FILES} down
#   - docker-compose ${DOCKER_COMPOSE_PRODUCTION_FILES} rm
#   artifacts:
#     when: always
#     expire_in: 4 weeks
#     reports:
#       junit: integration-test/robot_results/xunit.xml
#     paths:
#     - integration-test/robot_results
