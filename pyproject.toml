[tool.poetry]
name = "nubus-ldif-producer"
version = "0.1.0"
description = "Listens on an LDAP-Server UNIX socket, produces an LDIF of every ldap transaction and sends it to a NATS queue"
authors = ["Univention GmbH <packages@univention.de>"]
license = "GNU Affero General Public License v3"
packages = [{ include = "univention/ldif_producer", from = "." }]

[tool.poetry.dependencies]
aiohttp = "^3.8.5"
msgpack = "1.0.*"
nats-py = "^2.7.0"
# TODO: revert back to main branch version after the provisioning MR has also been merged.
nubus-provisioning-consumer = "0.36.0"
pydantic = "^2.3.0"
pydantic-settings = "^2.0.3"
python = "^3.11"
slapdsock = "=2.1.0"
# slapdsock = { path = "../python-slapdsock/", develop = true }

[tool.poetry.group.dev.dependencies]
pytest = "7.4"
pytest-asyncio = "0.23"
pytest-cov = "5.0"
pytest-profiling = "1.7"
pytest-timeout = "2.3.1"
ldap3 = "^2.9.1"
pytest-helm = ">=0.12.0"
helm-test-harness = "0.28.8"
# pytest-helm = { path = "../common-helm/pytest-helm", develop = true }
# helm-test-harness = { path = "../common-helm/helm-test-harness", develop = true }


[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[[tool.poetry.source]]
name = "nubus-provisioning"
url = "https://git.knut.univention.de/api/v4/projects/882/packages/pypi/simple"
priority = "supplemental"


[[tool.poetry.source]]
name = "pytest-helm"
url = "https://git.knut.univention.de/api/v4/projects/829/packages/pypi/simple"

[[tool.poetry.source]]
name = "ldap0"
url = "https://git.knut.univention.de/api/v4/projects/1112/packages/pypi/simple"
priority = "supplemental"

[[tool.poetry.source]]
name = "slapdsock"
url = "https://git.knut.univention.de/api/v4/projects/1111/packages/pypi/simple"
priority = "supplemental"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
extend-select = ["I"] # activate isort

[tool.ruff.lint.isort]
known-first-party = ["slapdsock", "univention"]
