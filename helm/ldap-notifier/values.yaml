# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2023 Univention GmbH

---

# The global properties are used to configure multiple charts at once.
global:
  # -- Indicates wether this chart is part of a Nubus deployment.
  nubusDeployment: false
  # -- Container registry address.
  imageRegistry: "artifacts.software-univention.de"

  # -- Credentials to fetch images from private registry.
  # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  #
  # imagePullSecrets:
  #   - "docker-registry"
  imagePullSecrets: []

  # -- Define an ImagePullPolicy.
  #
  # Ref.: https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
  #
  # "IfNotPresent" => The image is pulled only if it is not already present locally.
  # "Always" => Every time the kubelet launches a container, the kubelet queries the container image registry to
  #             resolve the name to an image digest. If the kubelet has a container image with that exact digest cached
  #             locally, the kubelet uses its cached image; otherwise, the kubelet pulls the image with the resolved
  #             digest, and uses that image to launch the container.
  # "Never" => The kubelet does not try fetching the image. If the image is somehow already present locally, the
  #            kubelet attempts to start the container; otherwise, startup fails.
  imagePullPolicy: "IfNotPresent"
affinity:
  podAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: ldap-server-type
              operator: In
              values:
                - primary
        topologyKey: kubernetes.io/hostname

environment: {}
fullnameOverride: ""
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
securityContext: {}
tolerations: []

# -- Application configuration for the Univention Directory Notifier
ldapNotifier:
  # -- TODO: Clarify usage of this parameter
  environment: "production"
  ldapServerUid: "101"
  ldapServerGid: "102"

## Docker image
image:
  pullPolicy: "IfNotPresent"
  pullSecrets: []
  registry: ""
  repository: "nubus-dev/images/ldap-notifier"
  tag: "latest"
  ## Define image sha256 as an alternative to `tag`
  # sha256:


volumes:
  # -- Mapping of volumes to the volume claim names to use. Those have to match
  # the volumes of the "ldap-server".
  # Default:
  # claims:
  #   shared-data: "shared-data-ldap-server-0"
  #   shared-run: "shared-run-ldap-server-0"
  claims: null

service:
  enabled: true
  type: ClusterIP
  ports:
    notifier:
      port: 6669
      protocol: "TCP"
  sessionAffinity:
    enabled: false
    timeoutSeconds: 10800


## Deployment resources
resources:
  # requests:
  #   memory: "512Mi"
  #   cpu: "250m"
  # limits:
  #   memory: "4Gi"
  #   cpu: "4"


autoscaling:
  enabled: false
...
