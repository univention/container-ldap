# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2023-2024 Univention GmbH

---
# The global properties are used to configure multiple charts at once.
global:
  # -- Indicates wether this chart is part of a Nubus deployment.
  nubusDeployment: false
  # -- ConfigMap name to read default UCR values from.
  configMapUcrDefaults: null
  # -- ConfigMap name to read UCR values from.
  configMapUcr: null
  # -- ConfigMap name to read forced UCR values from.
  configMapUcrForced: null

  # -- Allows to configure extensions globally.
  extensions: []
  # -- Allows to configure system extensions globally.
  systemExtensions: []

  # -- Container registry address.
  imageRegistry: "artifacts.software-univention.de"

  # -- Credentials to fetch images from private registry.
  # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  #
  # imagePullSecrets:
  #   - "docker-registry"
  imagePullSecrets: []

  # -- Define an ImagePullPolicy.
  #
  # Ref.: https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
  #
  # "IfNotPresent" => The image is pulled only if it is not already present locally.
  # "Always" => Every time the kubelet launches a container, the kubelet queries the container image registry to
  #             resolve the name to an image digest. If the kubelet has a container image with that exact digest cached
  #             locally, the kubelet uses its cached image; otherwise, the kubelet pulls the image with the resolved
  #             digest, and uses that image to launch the container.
  # "Never" => The kubelet does not try fetching the image. If the image is somehow already present locally, the
  #            kubelet attempts to start the container; otherwise, startup fails.
  imagePullPolicy: "IfNotPresent"
  ldap:
    baseDn: ""
    domainName: ""
# -- Additional custom annotations to add to all deployed objects.
additionalAnnotations: {}

# -- Additional custom labels to add to all deployed objects.
additionalLabels: {}

# -- Affinity for pod assignment.
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
# Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set.
affinityPrimary:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: ldap-server-type
                operator: In
                values:
                  - primary
          topologyKey: kubernetes.io/hostname
affinitySecondary:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: ldap-server-type
                operator: In
                values:
                  - secondary
          topologyKey: kubernetes.io/hostname
affinityProxy:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: ldap-server-type
                operator: In
                values:
                  - proxy
          topologyKey: kubernetes.io/hostname

# Security Context.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
containerSecurityContext:
  # -- Enable container privileged escalation.
  allowPrivilegeEscalation: false
  # -- Security capabilities for container.
  capabilities:
    drop:
      - "ALL"
  # -- Enable security context.
  enabled: true
  # -- Process user id.
  runAsUser: 101
  # -- Process group id.
  runAsGroup: 102
  # Set Seccomp profile.
  seccompProfile:
    # -- Disallow custom Seccomp profile by setting it to RuntimeDefault.
    type: "RuntimeDefault"
  # -- Mounts the container's root filesystem as read-only.
  readOnlyRootFilesystem: true
  # -- Run container as a user.
  runAsNonRoot: true

# -- Extensions to load. This will override the configuration in
# `global.extensions`.
extensions: []

# -- Array with extra environment variables to add to containers.
#
# extraEnvVars:
#   - name: FOO
#     value: "bar"
extraEnvVars: []

# -- Optionally specify a secret to create (primarily intended to be used in development environments to provide custom certificates)
extraSecrets: []

# -- Optionally specify an extra list of additional volumes.
extraVolumes: []

# -- Optionally specify an extra list of additional volumeMounts.
extraVolumeMounts: []

# -- Provide a name to substitute for the full names of resources.
fullnameOverride: ""

# -- Credentials to fetch images from private registry.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
#
# imagePullSecrets:
#   - "docker-registry"
imagePullSecrets: []

# -- Lifecycle to automate configuration before or after startup.
lifecycleHooks: {}

#  Configure extra options for containers probes.
livenessProbe:
  # -- Number of failed executions until container is terminated.
  failureThreshold: 10
  # -- Delay after container start until LivenessProbe is executed.
  initialDelaySeconds: 15
  # -- Time between probe executions.
  periodSeconds: 20
  # -- Number of successful executions after failed ones until container is marked healthy.
  successThreshold: 1
  # -- Timeout for command return.
  timeoutSeconds: 5
  tcpSocket:
    port: 389

# -- String to partially override release name.
nameOverride: ""

# -- Node labels for pod assignment.
# Ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

# Database persistence settings.
persistence:
  # -- The volume access modes, some of "ReadWriteOnce", "ReadOnlyMany", "ReadWriteMany", "ReadWriteOncePod".
  #
  # "ReadWriteOnce" => The volume can be mounted as read-write by a single node. ReadWriteOnce access mode still can
  #                    allow multiple pods to access the volume when the pods are running on the same node.
  # "ReadOnlyMany" => The volume can be mounted as read-only by many nodes.
  # "ReadWriteMany" => The volume can be mounted as read-write by many nodes.
  # "ReadWriteOncePod" => The volume can be mounted as read-write by a single Pod. Use ReadWriteOncePod access mode if
  #                       you want to ensure that only one pod across whole cluster can read that PVC or write to it.
  #
  accessModes:
    - "ReadWriteOnce"

  # -- Annotations for the PVC.
  annotations: {}

  # -- Custom PVC data source.
  dataSource: {}

  # -- Enable data persistence (true) or use temporary storage (false).
  enabled: true

  # -- Use an already existing claim.
  existingClaim: ""

  # -- Labels for the PVC.
  labels: {}

  # -- The volume size with unit.
  size: "10Gi"

  # -- The (storage) class of PV.
  storageClass: ""

  # -- Selector to match an existing Persistent Volume (this value is evaluated as a template).
  #
  # selector:
  #   matchLabels:
  #     app: my-app
  #
  selector: {}

# -- Pod Annotations.
# Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotationsPrimary: {}
podAnnotationsSecondary: {}
podAnnotationsProxy: {}

# -- Pod Labels.
# Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

# Pod Security Context.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext:
  # -- Enable security context.
  enabled: true

  # -- If specified, all processes of the container are also part of the supplementary group.
  fsGroup: 102

  # -- Change ownership and permission of the volume before being exposed inside a Pod.
  fsGroupChangePolicy: "Always"

  # -- Allow binding to ports below 1024 without root access.
  sysctls:
    - name: "net.ipv4.ip_unprivileged_port_start"
      value: "1"

#  Configure extra options for containers probes.
readinessProbePrimary:
  # -- Delay after container start until ReadinessProbe is executed.
  initialDelaySeconds: 15
  # -- Number of failed executions until container is considered not ready.
  failureThreshold: 1
  # -- Time between probe executions.
  periodSeconds: 20
  # -- Number of successful executions after failed ones until container is marked healthy.
  successThreshold: 1
  # -- Timeout for command return.
  timeoutSeconds: 5
  exec:
    command:
      - "/bin/bash"
      - "-c"
      - |
        /scripts/is_active_master.sh

#  Configure extra options for containers probes.
readinessProbe:
  # -- Delay after container start until ReadinessProbe is executed.
  initialDelaySeconds: 15
  # -- Number of failed executions until container is considered not ready.
  failureThreshold: 10
  # -- Time between probe executions.
  periodSeconds: 20
  # -- Number of successful executions after failed ones until container is marked healthy.
  successThreshold: 1
  # -- Timeout for command return.
  timeoutSeconds: 5
  tcpSocket:
    port: 389

# -- HA Mode
# If enabled, will override the replicaCountPrimary, replicaCountSecondary and replicaCountProxy values with the minimum viable values for a HA setup (if specified values are otherwise insufficient).
highAvailabilityMode: false

# -- Set the amount of replicas of the primary statefulset.
replicaCountPrimary: 1

# -- Set the amount of replicas of the secondary statefulset.
replicaCountSecondary: 0

# -- Set the amount of replicas of the proxy deployment.
replicaCountProxy: 0

# Configure resource requests and limits.
#
# Ref: https://kubernetes.io/docs/user-guide/compute-resources/
resourcesPrimary: null
resourcesSecondary: null
resourcesProxy: null
resources: {}

# Configure resource requests and limits for initContainers
initResources: {}

# Define and create Kubernetes Service.
#
# Ref.: https://kubernetes.io/docs/concepts/services-networking/service
service:
  # -- Additional custom annotations.
  annotations: {}
  # "ClusterIP" => Exposes the Service on a cluster-internal IP. Choosing this value makes the Service only reachable
  #                from within the cluster. This is the default that is used if you don't explicitly specify a type for
  #                a Service.
  # "NodePort" => Exposes the Service on each Node's IP at a static port (the NodePort). To make the node port
  #               available, Kubernetes sets up a cluster IP address, the same as if you had requested a Service of
  #               type: ClusterIP.
  # "LoadBalancer" => Exposes the Service externally using a cloud provider's load balancer.
  #
  # Ref.: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  # -- Choose the kind of Service, one of "ClusterIP", "NodePort" or "LoadBalancer".
  type: "ClusterIP"

  # Define the ports of Service.
  # You can set the port value to an arbitrary value, it will map the container port by name.
  #
  ports:
    ldap:
      # -- Accessible port.
      port: 389
      # -- Internal port.
      containerPort: 389
      # -- service protocol.
      protocol: "TCP"
    ldaps:
      # -- Accessible port.
      port: 636
      # -- Internal port.
      containerPort: 636
      # -- service protocol.
      protocol: "TCP"

# Configure resource requests and limits.
#
# Ref: https://kubernetes.io/docs/user-guide/compute-resources/

# Service account to use.
# Ref.: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  ## @param serviceAccount.automountServiceAccountToken Allows auto mount of ServiceAccountToken on the serviceAccount created
  ## Can be set to false if pods using this serviceAccount do not need to use K8s API
  ##
  automountServiceAccountToken: false
  # -- Additional custom labels for the ServiceAccount.
  labels: {}

#  Configure extra options for containers probes.
startupProbe:
  # -- Delay after container start until StartupProbe is executed.
  initialDelaySeconds: 15
  # -- Number of failed executions until container is terminated.
  failureThreshold: 10
  # -- Time between probe executions.
  periodSeconds: 20
  # -- Number of successful executions after failed ones until container is marked healthy.
  successThreshold: 1
  # -- Timeout for command return.
  timeoutSeconds: 5
  tcpSocket:
    port: 389

# -- Allows to configure the system extensions to load. This is intended for
# internal usage, prefer to use `extensions` for user configured extensions.
# This value will override the configuration in `global.systemExtensions`.
systemExtensions: []

# -- In seconds, time the given to the pod needs to terminate gracefully.
# Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
terminationGracePeriodSeconds: ""

# -- Tolerations for pod assignment.
# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology spread constraints rely on node labels to identify the topology domain(s) that each Node is in.
# Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
#
# topologySpreadConstraints:
#   - maxSkew: 1
#     topologyKey: failure-domain.beta.kubernetes.io/zone
#     whenUnsatisfiable: DoNotSchedule
topologySpreadConstraints: []

# Set up update strategy.
#
# Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
#
# Example:
# updateStrategy:
#  type: RollingUpdate
#  rollingUpdate:
#    maxSurge: 25%
#    maxUnavailable: 25%
updateStrategy:
  # -- Set to Recreate if you use persistent volume that cannot be mounted by more than one pods to make sure the pods
  # are destroyed first.
  type: "RollingUpdate"

# OpenSSL container image section (used for DH parameter generation)
dhInitContainer:
  image:
    imagePullPolicy: "IfNotPresent"
    registry: "docker.io"
    repository: "alpine/openssl"
    tag: "3.1.4@sha256:974b4593b02447256622dce7b930b98764441dab39c5ca729381aa35332d6778"

# Configures an init container that waits for keycloak to be ready
waitForDependency:
  enabled: true
  image:
    imagePullPolicy: "IfNotPresent"
    registry: ""
    repository: "nubus/images/wait-for-dependency"
    tag: "0.25.0@sha256:71a4d66fd67db6f92212b1936862b2b0d5a678d412213d74452a9195c2fe67f7"

ldifProducer:
  image:
    # -- Image pull policy. This setting has higher precedence than global.imagePullPolicy.
    imagePullPolicy: "IfNotPresent"
    # -- Container registry address. This setting has higher precedence than global.registry.
    registry: ""
    repository: "nubus-dev/images/ldif-producer"
    tag: "latest"
  nats:
    auth:
      credentialSecretName: ""
    connection:
      host: ""
      port: ""
    maxReconnectAttempts: 2
  config:
    # -- Log level for the ldif-producer.
    # valid values are: ERROR WARNING, INFO, DEBUG
    logLevel: "INFO"
    maxInFlightLdapMessages: 10
    backpressureWaitTimeout: 5
    # -- Amount of socketserver worker threads, should be roughly equivalent to the amount of ldap threads.
    ldapThreads: 5

# Definitions regarding to OpenLDAP deployment/configuration
ldapServer:
  image:
    # -- Image pull policy. This setting has higher precedence than global.imagePullPolicy.
    imagePullPolicy: "IfNotPresent"
    # -- Container registry address. This setting has higher precedence than global.registry.
    registry: ""
    repository: "nubus-dev/images/ldap-server"
    tag: "latest"
  # Configuration regarding OpenLDAP
  config:
    # -- Internal domain name of the UCS machine
    # domainName: "univention-organization.intranet"
    domainName: ""

    # -- Base DN of the LDAP directory
    #ldapBaseDn: "dc=univention-organization,dc=intranet"
    ldapBaseDn: ""

    # -- Log level for slapd.
    #    Pass a comma-separated list of values from the <a href="https://openldap.org/doc/admin24/runningslapd.html#Command-Line%20Options">OpenLDAP docs</a>.
    #    Example: `"conns,stats"`.
    logLevel: "stats"

    # -- A comma separated list of SAML2 Service Provider URLs (must be defined)
    #samlServiceProviders: "http://myportal.local:8000/univention/saml/metadata,http://myportal.local:8000/auth/realms/ucs"
    samlServiceProviders: ""

    # -- URL of the IdP that contains the SAML metadata.
    #samlMetadataUrl: "http://myportal.local:8097/realms/ucs/protocol/saml/descriptor"
    samlMetadataUrl: ""

    # -- Internal URL of the IdP to download SAML metadata from,
    #    in the case that `saml_metadata_url` is not visible to the container.
    #samlMetadataUrlInternal: "http://keycloak.myportal.local/realms/ucs/protocol/saml/descriptor"
    samlMetadataUrlInternal: ""

  # -- Optional reference to a different secret containing credentials
  #credentialSecret:
  #  name: "custom-credentials"
  #  adminPasswordKey: "adminPassword"
  credentialSecret: {}

  # Enable to generate DH parameters on startup
  generateDHparam: true

  # Legacy configuration. These values are used to define shared volume sizes shared. They are shared between ldap-server and ldap-notifier. With the removal of ldap-notifier these values will disappear
  legacy:
    sharedRunSize: "1Gi"
    shareSamlSize: "100Mi"


  # TLS configuration for the OpenLDAP server
  tls:
    enabled: false
    # -- Optional reference to the secret to use for reading certificates
    # certificateSecret: "custom-tls"

    # -- Optional reference to the secret to use for reading Diffie-Hellman parameters
    # dhparamSecret: "custom-dhparam"

    # Path the CA certificate file (TLSCACertPath (slapd), CA_CERT_FILE(entrypoint))
    caCertificateFile: "/certificates/ca.crt"

    # Path the servers certificate file
    certificateFile: "/certificates/tls.crt"

    # Path the servers private-key file
    certificateKeyFile: "/certificates/tls.key"

    # -- Optionally set a custom OpenSSL ciphersuite (use `openssl ciphers -v $CIPHERSUITE` to test possible choices).
    #TLSCipherSuite: "HIGH:MEDIUM:!aNULL:!MD5:!RC4"
