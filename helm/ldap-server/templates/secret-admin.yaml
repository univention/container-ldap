{{/*
SPDX-FileCopyrightText: 2024 Univention GmbH
SPDX-License-Identifier: AGPL-3.0-only
*/}}

# NOTE: We may need a utility function, so that it is easy to handle corner
# cases correctly.
{{- if (not (coalesce .Values.auth.existingSecret.name )) }}
---
kind: "Secret"
apiVersion: "v1"
type: "Opaque"
metadata:
  name: {{ include "common.names.fullname" . }}-admin
  namespace: {{ include "common.names.namespace" . | quote }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.additionalLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.additionalLabels "context" . ) | nindent 4 }}
    {{- end }}
    dev: mark
  {{- if .Values.additionalAnnotations }}
  annotations:
    {{- include "common.tplvalues.render" ( dict "value" .Values.additionalAnnotations "context" . ) | nindent 4 }}
  {{- end }}
stringData:
  # TODO: If this secret is representing a user account, then this field should
  # be called "password". A conflict of consistency for user account related
  # secrets on the one side and making it clear that this is the admin password
  # in the values structure on the other side.
  adminPassword: {{ coalesce .Values.auth.adminPassword | quote }}

{{- end }}
