#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# pylint: disable=invalid-name
#
# Univention Config Registry
#
# Copyright 2020 Univention GmbH
#
# https://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <https://www.gnu.org/licenses/>.

"""Replacement for "univention-config-registry" get and filter"""

# included
import collections
import os
import io
import sys
import re


class Registry(collections.UserDict):  # pylint: disable=too-many-ancestors
    """Container-class to hold UCR items"""
    def is_true(self, key, default=None, value=None):
        """Get item from value-param, data-dict or default and
        compare it to strings which stand for True"""
        if value is None:
            value = self.data.get(key)  # type: ignore
            if value is None:
                return default
        return value.lower() in (
            'yes',
            'true',
            '1',
            'enable',
            'enabled',
            'on',
        )

    def is_false(self, key, default=None, value=None):
        """Get item from value-param, data-dict or default and
        compare it to strings which stand for False"""
        if value is None:
            value = self.data.get(key)  # type: ignore
            if value is None:
                return default
        return value.lower() in (
            'no',
            'false',
            '0',
            'disable',
            'disabled',
            'off',
        )


config_registry = Registry(  # pylint: disable=invalid-name
    {
        'domainname':
            os.environ['DOMAIN_NAME'],  # 'fg-organization.intranet'
        'hostname':
            'ucs-6045',
        'ldap/acl/nestedgroups':
            'yes',
        'ldap/acl/read/anonymous':
            'no',
        'ldap/acl/slavepdc':
            'yes',
        'ldap/acl/user/password/change':
            'no',
        'ldap/attributeoptions':
            'entry-,lang-',
        'ldap/autostart':
            'yes',
        'ldap/base':
            os.environ['LDAP_BASE_DN'],  # 'dc=fg-organization,dc=intranet'
        'ldap/binaryattributes':
            '',
        'ldap/cachesize':
            '20000',
        'ldap/client/retry/count':
            '10',
        'ldap/database/bdb/db_config_options':
            'set_flags',
        'ldap/database/bdb/checkpoint':
            '',
        'ldap/database/bdb/set_flags':
            'DB_LOG_AUTOREMOVE',
        'ldap/database/mdb/envflags':
            '',
        'ldap/database/mdb/maxsize':
            '4295000000',
        'ldap/database/type':
            'mdb',
        'ldap/debug/level':
            'none',
        'ldap/hostdn':
            'cn=ucs-6045,cn=dc,cn=computers,' + os.environ['LDAP_BASE_DN'],
        'ldap/idlcachesize':
            '20000',
        'ldap/idletimeout':
            '360',
        'ldap/index/approx':
            'cn,givenName,mail,sn,uid',
        'ldap/index/autorebuild':
            'yes',
        'ldap/index/eq':
            ','.join(
                (
                    'aRecord',
                    'automountInformation',
                    'cNAMERecord',
                    'cn',
                    'description',
                    'dhcpHWAddress',
                    'displayName',
                    'entryUUID',
                    'gidNumber',
                    'givenName',
                    'homeDirectory',
                    'krb5PrincipalName',
                    'macAddress',
                    'mail',
                    'mailAlternativeAddress',
                    'mailPrimaryAddress',
                    'memberUid',
                    'objectClass',
                    'ou',
                    'pTRRecord',
                    'relativeDomainName',
                    'sambaAcctFlags',
                    'sambaDomainName',
                    'sambaGroupType',
                    'sambaPrimaryGroupSID',
                    'sambaSID',
                    'sambaSIDList',
                    'secretary',
                    'shadowExpire',
                    'sn',
                    'uid',
                    'uidNumber',
                    'uniqueMember',
                    'univentionAppID',
                    'univentionCanonicalRecipientRewriteEnabled',
                    'univentionDataType',
                    'univentionInventoryNumber',
                    'univentionLicenseModule',
                    'univentionLicenseObject',
                    'univentionMailHomeServer',
                    'univentionNagiosHostname',
                    'univentionObjectFlag',
                    'univentionObjectType',
                    'univentionPolicyReference',
                    'univentionServerRole',
                    'univentionService',
                    'univentionShareGid',
                    'univentionShareSambaName',
                    'univentionShareWriteable',
                    'univentionUDMOptionModule',
                    'univentionUDMPropertyCLIName',
                    'univentionUDMPropertyCopyable',
                    'univentionUDMPropertyDefault',
                    'univentionUDMPropertyDeleteObjectClass',
                    'univentionUDMPropertyDoNotSearch',
                    'univentionUDMPropertyHook',
                    'univentionUDMPropertyLayoutOverwritePosition',
                    'univentionUDMPropertyLayoutOverwriteTab',
                    'univentionUDMPropertyLayoutPosition',
                    'univentionUDMPropertyLayoutTabAdvanced',
                    'univentionUDMPropertyLayoutTabName',
                    'univentionUDMPropertyLdapMapping',
                    'univentionUDMPropertyLongDescription',
                    'univentionUDMPropertyModule',
                    'univentionUDMPropertyMultivalue',
                    'univentionUDMPropertyObjectClass',
                    'univentionUDMPropertyOptions',
                    'univentionUDMPropertyShortDescription',
                    'univentionUDMPropertySyntax',
                    'univentionUDMPropertyTranslationLongDescription',
                    'univentionUDMPropertyTranslationShortDescription',
                    'univentionUDMPropertyTranslationTabName',
                    'univentionUDMPropertyValueMayChange',
                    'univentionUDMPropertyValueRequired',
                    'univentionUDMPropertyVersion',
                    'zoneName',
                )
            ),
        'ldap/index/pres':
            ','.join(
                (
                    'aRecord',
                    'automountInformation',
                    'cn',
                    'description',
                    'dhcpHWAddress',
                    'displayName',
                    'gidNumber',
                    'givenName',
                    'homeDirectory',
                    'krb5PrincipalName',
                    'macAddress',
                    'mail',
                    'mailAlternativeAddress',
                    'mailPrimaryAddress',
                    'memberUid',
                    'name',
                    'objectClass',
                    'ou',
                    'relativeDomainName',
                    'shadowMax',
                    'sn',
                    'uid',
                    'uidNumber',
                    'uniqueMember',
                    'univentionMailHomeServer',
                    'univentionObjectFlag',
                    'univentionPolicyReference',
                    'univentionUDMPropertyCLIName',
                    'univentionUDMPropertyDefault',
                    'univentionUDMPropertyDeleteObjectClass',
                    'univentionUDMPropertyDoNotSearch',
                    'univentionUDMPropertyHook',
                    'univentionUDMPropertyLayoutOverwritePosition',
                    'univentionUDMPropertyLayoutOverwriteTab',
                    'univentionUDMPropertyLayoutPosition',
                    'univentionUDMPropertyLayoutTabAdvanced',
                    'univentionUDMPropertyLayoutTabName',
                    'univentionUDMPropertyLdapMapping',
                    'univentionUDMPropertyLongDescription',
                    'univentionUDMPropertyModule',
                    'univentionUDMPropertyMultivalue',
                    'univentionUDMPropertyObjectClass',
                    'univentionUDMPropertyOptions',
                    'univentionUDMPropertyShortDescription',
                    'univentionUDMPropertySyntax',
                    'univentionUDMPropertyTranslationLongDescription',
                    'univentionUDMPropertyTranslationShortDescription',
                    'univentionUDMPropertyTranslationTabName',
                    'univentionUDMPropertyValueMayChange',
                    'univentionUDMPropertyValueRequired',
                    'univentionUDMPropertyVersion',
                    'zoneName',
                )
            ),
        'ldap/index/quickmode':
            'false',
        'ldap/index/sub':
            ','.join(
                (
                    'aRecord',
                    'associatedDomain',
                    'automountInformation',
                    'cn',
                    'default',
                    'description',
                    'displayName',
                    'employeeNumber',
                    'givenName',
                    'macAddress',
                    'mail',
                    'mailAlternativeAddress',
                    'mailPrimaryAddress',
                    'name',
                    'ou',
                    'pTRRecord',
                    'printerModel',
                    'relativeDomainName',
                    'sambaSID',
                    'sn',
                    'uid',
                    'univentionInventoryNumber',
                    'univentionOperatingSystem',
                    'univentionSyntaxDescription',
                    'univentionUDMPropertyLongDescription',
                    'univentionUDMPropertyShortDescription',
                    'zoneName',
                )
            ),
        # This is normally not in UCR,
        # only something that evaluate to true in 31modules
        'ldap/k5pwd':
            'True',
        'ldap/limits':
            'users time.soft=-1 time.hard=-1',
        'ldap/monitor':
            'False',  # Would be nice to see a working monitor backend
        'ldap/monitor/acl/read/groups/':
            '',  # What is even a sensible default here?
        'ldap/pwd_scheme_kinit':
            'True',
        'ldap/master/port':
            '7389',
        'ldap/master':
            'ucs-6045.' + os.environ['DOMAIN_NAME'],
        'ldap/maxopenfiles':
            '8192',
        'ldap/overlay/lastbind':
            'False',  # TODO Add lastbind.la to image
        'ldap/overlay/lastbind/precision':
            '3600',
        'ldap/overlay/memberof':
            'true',
        'ldap/overlay/memberof/objectclass':
            'posixGroup',
        'ldap/overlay/memberof/member':
            'uniqueMember',
        'ldap/overlay/memberof/memberof':
            'memberOf',
        'ldap/overlay/memberof/dangling':
            'ignore',
        'ldap/overlay/memberof/dangling/errorcode':
            '',
        'ldap/overlay/memberof/modifiersname':
            '',
        'ldap/overlay/memberof/refint':
            '',
        'ldap/policy/cron':
            '5 * * * *',
        'ldap/ppolicy':
            'False',  # TODO See if this has dependencies
        'ldap/ppolicy/enabled':
            'False',
        'ldap/ppolicy/default':
            '',
        'ldap/server/ip':
            '127.0.0.1',
        'ldap/server/name':
            'ucs-6045.' + os.environ['DOMAIN_NAME'],
        'ldap/server/port':
            '389',
        'ldap/server/type':
            'master',
        'ldap/sizelimit':
            '400000',
        'ldap/shadowbind':
            'true',
        'ldap/shadowbind/ignorefilter':
            '(|(objectClass=univentionDomainController)(userPassword={KINIT}))',
        'ldap/threads':
            '16',
        'ldap/tls/ciphersuite':
            'HIGH:MEDIUM:!aNULL:!MD5:!RC4',
        'ldap/tls/minprotocol':
            '3.1',
        'ldap/tls/dh/paramfile':
            '/etc/ldap/dh_2048.pem',
        'ldap/tool-threads':
            '1',
        'ldap/translogfile':
            '/var/lib/univention-ldap/listener/listener',
        'slapd/port':
            '389',
    }
)

# TODO: Eventually admit that it's not
#       univention-config-registry anymore
WARNING_TEXT = '''\
# Warning: This file is auto-generated and might be overwritten by
#          univention-config-registry.
#          Please edit the following file(s) instead:
# Warnung: Diese Datei wurde automatisch generiert und kann durch
#          univention-config-registry ueberschrieben werden.
#          Bitte bearbeiten Sie an Stelle dessen die folgende(n) Datei(en):
#
'''  # noqa: E101


# TODO: Check if full porting of warning_string() is needed
def warning_string():
    """Print out a warning message and all filenames from the template-dir"""
    string = WARNING_TEXT
    path = "/etc/univention/templates/files/etc/ldap/slapd.conf.d/"
    for file_name in sorted(os.listdir(path)):
        file_path = os.path.join(path, file_name)
        string += f'# \t{file_path}\n'
    return string


def resolve_variable(line):
    """Replaces a UCR-Template-variable with a value from UCR"""
    VARIABLE_PATTERN = re.compile('@%@([^@]+)@%@')
    return VARIABLE_PATTERN.sub(lambda x: config_registry[x.group(1)], line)


# TODO: Complete this
def custom_groupname(value):
    """Stub function for UCR-Templates"""
    return value


# TODO: Complete this
def custom_username(value):
    """Stub function for UCR-Templates"""
    return value


def run_filter(template, directory):
    """Parses UCR-Templates from stdin and calls exec on embedded code"""
    inside_section = False
    to_be_compiled = []

    buf = io.StringIO()
    for line in template.splitlines():
        line += '\n'
        # The original implementation is in:
        # base/univention-config-registry/python/
        # univention/config_registry/handler.py
        if line == '@%@UCRWARNING=# @%@\n':
            print(warning_string(), file=buf)
            continue

        if '@%@' in line:
            line = resolve_variable(line)

        if line == '@!@\n':
            if not inside_section:
                inside_section = True

            else:

                def print_wrapper(*_args, **kwargs):
                    kwargs.setdefault('file', buf)
                    print(*_args, **kwargs)

                inside_section = False
                exec(  # pylint: disable=exec-used
                    ''.join(to_be_compiled),
                    dict(
                        print=print_wrapper,
                        custom_groupname=custom_groupname,
                        custom_username=custom_username,
                        configRegistry=directory,
                        run_filter=run_filter
                    ),
                )
                print('', file=buf)
                to_be_compiled = []

        elif inside_section:
            # Workaround for some import that doesn't do much anyway
            # TODO: Complete this, if needed
            if line in (
                'from univention.config_registry.handler import run_filter\n',
                'from univention.lib.misc import custom_groupname\n',
                (
                    'from univention.lib.misc import '
                    'custom_username, custom_groupname\n'
                ),
            ):
                continue
            to_be_compiled += line

        else:
            print(line, file=buf, end='')

    # This function must return a decodable byte array
    # in order to maintain compatibilty with the
    # 25univention-ldap-server_local-schema fragment
    # which invokes this function and tries to decode the result
    return buf.getvalue().encode('UTF-8')


def main():
    """main - what else, pylint?"""
    print(run_filter(sys.stdin.read(), config_registry).decode('UTF-8'))


if __name__ == '__main__':
    main()
